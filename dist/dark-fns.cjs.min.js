"use strict";function concatFn(){var n=[].slice.call(arguments);return function(){var t=this,i=arguments;return n.map(function(n){return n.apply(t,i)})}}function curry(n){var t=[].slice.call(arguments,1);return function(){return n.apply(this,t.concat([].slice.call(arguments)))}}var fns={concatFn:concatFn,curry:curry};function _typeof(n){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function genTypeofFn(t){return function(n){return _typeof(n)===t}}function genIsEqualFn(t){return function(n){return n===t}}function genCbIsEqualFn(t,i){return function(n){return t(n)===i}}var isFn=genTypeofFn("function"),isObj=genTypeofFn("object"),isUnDef=genTypeofFn("undefined"),isNumber=genTypeofFn("number"),isString=genTypeofFn("string"),isNull=genIsEqualFn(null),isZero=genIsEqualFn(0),isFalse=genIsEqualFn(!1),isTrue=genIsEqualFn(!0),isEmptyString=genIsEqualFn(""),isEmptyArray=genCbIsEqualFn(JSON.stringify,"[]"),isEmptyObj=genCbIsEqualFn(JSON.stringify,"{}");function isArray(n){return isObj(n)&&n instanceof Array}function isStrictObj(n){return isObj(n)&&!isArray(n)}function isEmpty(n){return isEmptyString(n)||isEmptyArray(n)||isEmptyObj(n)}function isFalsy(n){return!n}function isInstanceOf(n,t){return n instanceof t}var assert={isFn:isFn,isArray:isArray,isString:isString,isUnDef:isUnDef,isNull:isNull,isNumber:isNumber,isObj:isObj,isStrictObj:isStrictObj,isEmptyObj:isEmptyObj,isEmptyArray:isEmptyArray,isEmptyString:isEmptyString,isEmpty:isEmpty,isZero:isZero,isTrue:isTrue,isFalse:isFalse,isFalsy:isFalsy,isInstanceOf:isInstanceOf};function getValByKeyPath(n,t,i){if(isEmptyString(t))return n;for(var r=t.split("."),s=0,e=r.length;s<e;s++)if(isUnDef(n[r[s]])){if(s!==e-1)return null;if(!isUnDef(i))return i}else n=n[r[s]];return n}function setValByKeyPath(n,t,i){for(var r=i.split("."),s=0,e=r.length;s<e-1;s++){if(isUnDef(n[r[s]]))return null;n=n[r[s]]}n[r[s]]=t}function mixin(n,t){var i,r,s,e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},u=e.isConcatFn,o=e.isConcatArr;for(i in t)r=t[i],isStrictObj(s=n[i])&&isStrictObj(r)&&(r=mixin(s,r,e)),isTrue(u)&&isFn(s)&&isFn(r)&&(r=concatFn(s,r)),isTrue(o)&&isArray(s)&&(r=s.concat(r)),n[i]=r;return n}var object={getValByKeyPath:getValByKeyPath,setValByKeyPath:setValByKeyPath,mixin:mixin},index={assert:assert,fns:fns,object:object};module.exports=index;
